- name: Configure PostreSQL
  hosts: nodes
  become: true
  vars:
    db_superuser: "postgres"
    db_name: "postgres"
    db_host: "localhost"
    db_port: "5432"
    repl_user: "replicator"
    repl_password: "Qwerty123"
    master_address: "192.168.56.11"
    replica_address: "192.168.56.12"
  tasks:

    - name: Install packages
      apt:
        name:
          - postgresql
          - postgresql-contrib
          - python3-pip
          - libpq-dev
          - acl
        update_cache: true

    - name: Pip install psycopg2-binary
      pip:
        name: psycopg2-binary

    - name: Start sql service
      systemd:
        name: postgresql
        state: started
        enabled: true

    - name: Create user for replication
      postgresql_user:
        name: "{{ repl_user }}"
        password: "{{ repl_password }}"
        role_attr_flags: replication
        state: present
      become: true
      become_user: postgres
      when: "ansible_hostname == 'node1'"

    - name: Copy config file
      template:
        src: postgresql.conf.j2
        dest: /etc/postgresql/14/main/postgresql.conf
        owner: postgres
        group: postgres
        mode: 0644

    - name: Copy pg_hba.conf
      template:
        src: pg_hba.conf.j2
        dest: /etc/postgresql/14/main/pg_hba.conf
        owner: postgres
        group: postgres
        mode: 0640

    - name: Restart postgresql
      systemd:
        name: postgresql
        state: restarted

    - name: Stop postgres service on node2
      systemd:
        name: postgresql
        state: stopped
      when: "ansible_hostname == 'node2'"

    - name: Delete files from node2
      file:
        path: /var/lib/postgresql/14/main/
        state: absent
      when: "ansible_hostname == 'node2'"

    - name: Copy postgres file to node2
      expect:
        command: "pg_basebackup -h {{ master_address }} -U  {{ repl_user }} -D  /var/lib/postgresql/14/main/ -R -P"
        responses:
          'Password': "{{ repl_password }}"
      when: "ansible_hostname == 'node2'"

    - name: Change owner to postgres
      file:
        path: /var/lib/postgresql/14/main/
        state: directory
        owner: postgres
        group: postgres
        mode: 0700
        recurse: true
      when: "ansible_hostname == 'node2'"

    - name: Start postgres service on node2
      systemd:
        name: postgresql
        state: started
      when: "ansible_hostname == 'node2'"


    - name: Create new db on node1
      postgresql_db:
        name: otus
        comment: Test db
      become_user: postgres
      when: "ansible_hostname == 'node1'"

    - name: Show databases
      shell: psql -c '\l'
      become_user: postgres
      register: result

    - name: Print result
      debug:
        var: result.stdout_lines
